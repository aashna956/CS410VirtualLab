/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
#define JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_

#include <jsonrpccpp/server.h>

class AbstractStubServer : public jsonrpc::AbstractServer<AbstractStubServer>
{
  public:
    AbstractStubServer(jsonrpc::AbstractServerConnector& conn,
                       jsonrpc::serverVersion_t type
                       = jsonrpc::JSONRPC_SERVER_V2)
        : jsonrpc::AbstractServer<AbstractStubServer>(conn, type)
    {
        this->bindAndAddMethod(
            jsonrpc::Procedure("search", jsonrpc::PARAMS_BY_NAME,
                               jsonrpc::JSON_ARRAY, "query_text",
                               jsonrpc::JSON_STRING, "ranker_method",
                               jsonrpc::JSON_STRING, NULL),
            &AbstractStubServer::searchI);
    }

    inline virtual void searchI(const Json::Value& request,
                                Json::Value& response)
    {
        response = this->search(request["query_text"].asString(),
                                request["ranker_method"].asString());
    }
    virtual Json::Value search(const std::string& query_text,
                               const std::string& ranker_method) = 0;
};

#endif // JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
